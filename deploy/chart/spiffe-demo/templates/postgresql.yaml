apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "spiffeDemo.name" . }}-postgresql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spiffeDemo.name" . }}-postgresql
  labels:
    app: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      serviceAccountName: {{ include "spiffeDemo.name" . }}-postgresql
      containers:
        - name: postgresql
          image:  "{{- .Values.postgresql.imageName -}}:{{- .Values.postgresql.imageTag -}}"
          imagePullPolicy: Always
          volumeMounts:
            - name: postgresql-certs
              mountPath: /opt/postgresql-certs
            - name: postgres-config
              mountPath: /etc/postgresql
          args: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
          env:
          # Don't do this in production
          - name: POSTGRES_PASSWORD
            value: "wearenotusingthissoIdontworryaboutit"
          - name: SPIFFE_USER
            value: {{ include "spiffeDemo.name" . }}-customer
          ports:
          - containerPort: 5432
            name: postgresql
            protocol: TCP
        - name: spiffe-helper
          image: "{{- .Values.spiffeHelper.imageName -}}:{{- .Values.spiffeHelper.imageTag -}}"
          imagePullPolicy: Always
          volumeMounts:
            - name: spiffe-workload-api
              mountPath: /spiffe-workload-api
              readOnly: true
            - name: postgresql-certs
              mountPath: /opt/postgresql-certs
            - name: spiffe-helper
              mountPath: /etc/spiffe-helper
          args: ["-config", "/etc/spiffe-helper/helper.conf"]
      volumes:
      - csi:
          driver: csi.spiffe.io
          readOnly: true
        name: spiffe-workload-api
      - name: postgresql-certs
        emptyDir:
          medium: Memory
      - name: spiffe-helper
        configMap:
          name: {{ include "spiffeDemo.name" . }}-spiffe-helper
      - name: postgres-config
        configMap:
          name: {{ include "spiffeDemo.name" . }}-postgres-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "spiffeDemo.name" . }}-postgresql
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spiffeDemo.name" . }}-spiffe-helper
data:
  helper.conf: |
    # This configuration file reloads postgresql certificates using
    # the pg_reload_conf(). However, there are other ways for configuration
    # reloading in postgres:
    #
    #   In postgres 9.5, only way to reload certificates is to restart:
    #
    #       /etc/init.d/postgresql restart
    #
    #   From postgres 10, it is possible to reload by:
    #
    #       calling service reload:
    #        /etc/init.d/postgresql reload
    #
    #       Using pg_ctl:
    #           /usr/lib/postgresql/10/bin/pg_ctl reload -D /etc/postgresql/10/main/
    #
    #       Reloading with pg_reload_conf():
    #           psql -c 'SELECT pg_reload_conf();'
    #

    # SPIRE agent unix socket path
    agent_address = "{{- .Values.spiffe.socketPath -}}"

    # psql binary path
    cmd = "/usr/bin/psql"

    # Query for configuration reloading
    cmd_args = "-h 127.0.0.1 -p 5432 -c \"SELECT pg_reload_conf();\""

    # Directory to store certificates (must match with the ssl setings in postgresql.conf)
    cert_dir = "/opt/postgresql-certs"

    # No renew signal is used in this example
    renewSignal = ""

    # Certificate, key and bundle names must match those configured in postgresql.conf
    svid_file_name = "svid.pem"
    svid_key_file_name = "svid.key"
    svid_bundle_file_name = "svid_bundle.pem"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spiffeDemo.name" . }}-postgres-config
data:
  postgresql.conf: |
    # -----------------------------
    # PostgreSQL configuration file
    # -----------------------------
    #
    # This file consists of lines of the form:
    #
    #   name = value
    #
    # (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
    # "#" anywhere on a line.  The complete list of parameter names and allowed
    # values can be found in the PostgreSQL documentation.
    #
    # The commented-out settings shown in this file represent the default values.
    # Re-commenting a setting is NOT sufficient to revert it to the default value;
    # you need to reload the server.
    #
    # This file is read on server startup and when the server receives a SIGHUP
    # signal.  If you edit the file on a running system, you have to SIGHUP the
    # server for the changes to take effect, run "pg_ctl reload", or execute
    # "SELECT pg_reload_conf()".  Some parameters, which are marked below,
    # require a server shutdown and restart to take effect.
    #
    # Any parameter can also be given as a command-line option to the server, e.g.,
    # "postgres -c log_connections=on".  Some parameters can be changed at run time
    # with the "SET" SQL command.
    #
    # Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
    #                MB = megabytes                     s   = seconds
    #                GB = gigabytes                     min = minutes
    #                TB = terabytes                     h   = hours
    #                                                   d   = days
    #------------------------------------------------------------------------------
    # CONNECTIONS AND AUTHENTICATION
    #------------------------------------------------------------------------------

    # - Connection Settings -

    listen_addresses = '*'
              # comma-separated list of addresses;
              # defaults to 'localhost'; use '*' for all
              # (change requires restart)

    ssl = on
    ssl_cert_file = '/opt/postgresql-certs/svid.pem'
    ssl_key_file = '/opt/postgresql-certs/svid.key'
    ssl_ca_file = '/opt/postgresql-certs/svid_bundle.pem'
