apiVersion: v1
kind: ServiceAccount
metadata:
  name: spiffe-httpbackend
  namespace: spiffe-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spiffe-httpbackend
  namespace: spiffe-demo
  labels:
    app: spiffe-httpbackend
spec:
  selector:
    matchLabels:
      app: spiffe-httpbackend
  template:
    metadata:
      labels:
        app: spiffe-httpbackend
    spec:
      serviceAccountName: spiffe-httpbackend
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.25.1
          imagePullPolicy: Always
          args: ["-l", "debug", "--local-address-ip-version", "v4", "-c", "/run/envoy/envoy.yaml"]
          ports:
          - containerPort: 9001
          volumeMounts:
          - name: envoy-config
            mountPath: "/run/envoy"
            readOnly: true
          - name: spiffe-workload-api
            mountPath: /run/spire/sockets
            readOnly: true
        - name: spiffe-httpbackend
          image: mattiasgees/spiffe-demo@sha256:7307d60535d514ffeec7b82d8cc9e03f56f840b85998ce0d0344f8474902d4f2
          imagePullPolicy: Always
          args:
          - httpservice
          - --server-address
          - 0.0.0.0:8080
          ports:
          - containerPort: 8080
      volumes:
      - csi:
          driver: csi.spiffe.io
          readOnly: true
        name: spiffe-workload-api
      - name: envoy-config
        configMap:
          name: backend-envoy
---
apiVersion: v1
kind: Service
metadata:
  name: spiffe-httpbackend
  namespace: spiffe-demo
spec:
  selector:
    app: spiffe-httpbackend
  ports:
    - protocol: TCP
      port: 443
      targetPort: 9001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-envoy
  namespace: spiffe-demo
data:
  envoy.yaml: |
    node:
      id: "backend"
      cluster: "demo-cluster-spire"
    static_resources:
      listeners:
      - name: local_service
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9001
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              common_http_protocol_options:
                idle_timeout: 1s
              forward_client_cert_details: sanitize_set
              set_current_client_cert_details:
                  uri: true
              codec_type: auto
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: "/tmp/inbound-proxy.log"
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config: 
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                - name: "spiffe://spire.internal.mattiasgees.be/ns/spiffe-demo/sa/spiffe-httpbackend"
                  sds_config:
                    resource_api_version: V3
                    api_config_source:
                      api_type: GRPC
                      transport_api_version: V3
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_agent
                combined_validation_context:
                  # validate the SPIFFE ID of incoming clients (optionally)
                  default_validation_context:
                    match_typed_subject_alt_names:
                    - san_type: URI
                      matcher:
                        exact: "spiffe://spire.internal.mattiasgees.be/ns/spiffe-demo/sa/spiffe-customer"
                  # obtain the trust bundle from SDS
                  validation_context_sds_secret_config:
                    name: "spiffe://spire.internal.mattiasgees.be"
                    sds_config:
                      resource_api_version: V3
                      api_config_source:
                        api_type: GRPC
                        transport_api_version: V3
                        grpc_services:
                          envoy_grpc:
                            cluster_name: spire_agent
                tls_params:
                  ecdh_curves:
                    - X25519:P-256:P-521:P-384
      clusters:
      - name: spire_agent
        connect_timeout: 0.25s
        http2_protocol_options: {}
        load_assignment:	
          cluster_name: spire_agent
          endpoints:	
          - lb_endpoints:	
            - endpoint:	
                address:	
                  pipe:	
                    path: /run/spire/sockets/socket
      - name: local_service
        connect_timeout: 1s
        type: strict_dns
        load_assignment:	
          cluster_name: local_service
          endpoints:	
          - lb_endpoints:	
            - endpoint:	
                address:	
                  socket_address:	
                    address: 127.0.0.1
                    port_value: 8080
